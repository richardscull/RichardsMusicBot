import { AudioPlayerPlayingState } from '@discordjs/voice';
import {
  ChatInputCommandInteraction,
  SlashCommandSubcommandBuilder,
} from 'discord.js';
import { ExtendedClient } from '../../../client/ExtendedClient';
import { SendThreadEmbed } from '../helpers/embeds.helper';

export const data = (subcommand: SlashCommandSubcommandBuilder) => {
  return subcommand.setName('pause').setDescription('–§—É–Ω–∫—Ü–∏—è –ø–∞—É–∑—ã —Ç—Ä–µ–∫–∞');
};

export async function execute(
  interaction: ChatInputCommandInteraction<'cached'>,
  client: ExtendedClient
) {
  const guildPlayer = await client.GetGuildPlayer(interaction.guildId);
  if (!guildPlayer) return;
  const { audioPlayer, embed } = guildPlayer;
  const playerState = audioPlayer.state as AudioPlayerPlayingState;

  const isPlaying = playerState.status === 'playing';
  isPlaying ? audioPlayer.pause() : audioPlayer.unpause();

  const getEmbed = client.GetSuccessEmbed(
    `üåø –ü–ª–µ–µ—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ ${
      isPlaying ? '–ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø–∞—É–∑—É!' : '—Å–Ω—è—Ç —Å –ø–∞—É–∑—ã!'
    }`
  );

  if (embed.playerThread)
    SendThreadEmbed(interaction, embed.playerThread, {
      description: `üé∂ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${
        isPlaying ? `**–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª**` : `**–≤–æ–∑–æ–±–Ω–æ–≤–∏–ª**`
      } –≤–µ—â–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞!`,
    }).catch(() => {});

  return await interaction.editReply({
    embeds: [getEmbed],
  });
}
