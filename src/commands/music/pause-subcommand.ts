import { AudioPlayerPlayingState } from '@discordjs/voice';
import {
  ChatInputCommandInteraction,
  SlashCommandSubcommandBuilder,
} from 'discord.js';
import { ExtendedClient } from '../../client/ExtendedClient';
import { sendThreadEmbed } from './embedsHandler';

export const data = (subcommand: SlashCommandSubcommandBuilder) => {
  return subcommand.setName('pause').setDescription('–§—É–Ω–∫—Ü–∏—è –ø–∞—É–∑—ã —Ç—Ä–µ–∫–∞');
};

export async function execute(
  interaction: ChatInputCommandInteraction<'cached'>,
  client: ExtendedClient
) {
  const guildPlayer = await client.getGuildPlayer(interaction.guildId);
  if (!guildPlayer) return;
  const { audioPlayer, status, embed } = guildPlayer;
  const playerState = audioPlayer.state as AudioPlayerPlayingState;
  playerState.status === 'playing'
    ? audioPlayer.pause()
    : audioPlayer.unpause();

  const getEmbed = client.successEmbed(
    `üåø –ü–ª–µ–µ—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ ${
      status.isPaused ? '—Å–Ω—è—Ç —Å –ø–∞—É–∑—ã!' : '–ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø–∞—É–∑—É!'
    }`
  );

  if (embed.playerThread)
    sendThreadEmbed(interaction, embed.playerThread, {
      description: `üé∂ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${
        status.isPaused ? `**–≤–æ–∑–æ–±–Ω–æ–≤–∏–ª**` : `**–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª**`
      } –≤–µ—â–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞!`,
    });

  return await interaction.editReply({
    embeds: [getEmbed],
  });
}
